
package services;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 4.0.0-M4
 * Generated source version: 3.0
 * 
 */
@WebService(name = "FacadeImpl", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FacadeImpl {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchTelephone", targetNamespace = "http://service/", className = "services.SearchTelephone")
    @ResponseWrapper(localName = "searchTelephoneResponse", targetNamespace = "http://service/", className = "services.SearchTelephoneResponse")
    @Action(input = "http://service/FacadeImpl/searchTelephoneRequest", output = "http://service/FacadeImpl/searchTelephoneResponse")
    public String searchTelephone(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns services.Personne
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchPersonne", targetNamespace = "http://service/", className = "services.SearchPersonne")
    @ResponseWrapper(localName = "searchPersonneResponse", targetNamespace = "http://service/", className = "services.SearchPersonneResponse")
    @Action(input = "http://service/FacadeImpl/searchPersonneRequest", output = "http://service/FacadeImpl/searchPersonneResponse")
    public Personne searchPersonne(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addPersonne", targetNamespace = "http://service/", className = "services.AddPersonne")
    @ResponseWrapper(localName = "addPersonneResponse", targetNamespace = "http://service/", className = "services.AddPersonneResponse")
    @Action(input = "http://service/FacadeImpl/addPersonneRequest", output = "http://service/FacadeImpl/addPersonneResponse")
    public void addPersonne(
        @WebParam(name = "arg0", targetNamespace = "")
        Personne arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addPersonneList", targetNamespace = "http://service/", className = "services.AddPersonneList")
    @ResponseWrapper(localName = "addPersonneListResponse", targetNamespace = "http://service/", className = "services.AddPersonneListResponse")
    @Action(input = "http://service/FacadeImpl/addPersonneListRequest", output = "http://service/FacadeImpl/addPersonneListResponse")
    public void addPersonneList(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllNom", targetNamespace = "http://service/", className = "services.GetAllNom")
    @ResponseWrapper(localName = "getAllNomResponse", targetNamespace = "http://service/", className = "services.GetAllNomResponse")
    @Action(input = "http://service/FacadeImpl/getAllNomRequest", output = "http://service/FacadeImpl/getAllNomResponse")
    public List<String> getAllNom();

}
